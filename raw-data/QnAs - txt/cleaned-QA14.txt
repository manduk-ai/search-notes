What is Gradient Descent?
Gradient Descent is an optimization algorithm for finding 
a local minima of a differentiable function.
In machine learning, we use GD to minimize cost / loss function.
We do that iteratively:
Compute the gradient (slope), the first order derivative of the function at that point
Make a step in the direction opposite to the gradient
####

Explain difference between GD and: Batch GD, SGD, Mini-Batch GD
Batch GD
We take the average of the gradients of all the training examples 
and then use that mean gradient to update our parameters. 
So thatâ€™s just one step of gradient descent in one epoch.
Stochastic GD 
We consider just one example at a time to take a single step
SGD can be used for larger datasets. 
It converges faster when the dataset is large 
as it causes updates to the parameters more frequently.
We cannot implement the vectorized implementation for SDG
Mini-Batch GD
We don't use all data at once nor we use the single example at a time. 
We use a batch of a fixed number of training examples which is less 
than the actual dataset and call it a mini-batch
####

How to import Dataset and DataLoader?
from torch.utils.data import Dataset, DataLoader
####

How to import Linear model and SGD optimizer?
from torch.nn import Linear
from torch.optim import SGD
####

How SGD optimizer works in PyTorch?
SGD optimizer in PyTorch actually is Mini-batch Gradient Descent.
But you define the size of the mini-batch in the data loader, not in the optimizer.
####

criterion = torch.nn.BCELoss()
loss = criterion(? , ?)
Which is the first parameter: prediction or target
loss = criterion(prediction, target)
Otherwise expect 'nan' as a loss value
####

Difference between torch.tensor() and torch.Tensor?
torch.Tensor is alias for torch.FloatTensor 
torch.tensor infers the dtype automatically
it's better to use torch.tensor as it also has arguments like dtype
if you would like to change the type.
####

What sklearn module provides us with generators of data of different shapes?
datasets
from sklearn import datasets
make_blobs
make_circles
####

How to create 2D numpy array so it looks like this?
[ 1,  2,  3,  4,  5
  6,  7,  8,  9, 10]
np.array([[1,2,3,4,5],[6,7,8,9,10]])
array([[ 1,  2,  3,  4,  5],
      [ 6,  7,  8,  9, 10]])
####

From where do you import Dataset and DataLoader?
from torch.utils.data import Dataset, DataLoader
